apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/backend-network: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: ntr
            - name: POSTGRES_MULTIPLE_DATABASES
              value: "main, orders, inventory, payments, deliveries"
            - name: POSTGRES_PASSWORD
              value: hardpass
            - name: POSTGRES_USER
              value: ntr
          image: postgres:latest
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: initdb
      volumes:
        - name: postgres-pv-claim
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: initdb
          configMap:
            name: initdb-config
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb-config
data:
  multiple_databases.sh: |
        #!/bin/bash
        # https://dev.to/nietzscheson/multiples-postgres-databases-in-one-service-with-docker-compose-4fdf

        set -e
        set -u

        function create_user_and_database() {
            local database=$1
            echo "  Creating user and database '$database'"
            psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
                CREATE USER $database;
                CREATE DATABASE $database;
                GRANT ALL PRIVILEGES ON DATABASE $database TO $database;
        EOSQL
        }

        if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
            echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
            for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
                create_user_and_database $db
            done
            echo "Multiple databases created"
        fi
